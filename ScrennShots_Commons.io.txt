
ScreenShots:

Need to add Dependency in POM file for commons.io latest version.
or Normally we need to download jar for Coomons.io.

File scrennShotFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
FileUtils.copyFile(scrennShotFile, new File(".//ScreenShots//screen.png"));
EG:
package ui;
import java.io.File;
import java.io.IOException;
import java.util.Date;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import io.github.bonigarcia.wdm.WebDriverManager;
public class ScreenShotDemo {

	public static void main(String[] args) throws InterruptedException, IOException {
		//System.setProperty("webdriver.chrome.driver", "C:\\DriverBrowser\\chromedriver.exe");
		Date curDate =new Date();
		String screenShotFileName =curDate.toString().replace(' ','-').replace(':', '-');		
		
		WebDriverManager.chromedriver().setup();
		WebDriver driver=new ChromeDriver();
		driver.get("https://www.ebay.com/");
		driver.manage().window().maximize(); 	
		
		File scrennShotFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(scrennShotFile, new File(".//ScreenShots//"+screenShotFileName+".png"));
		
	}

}



Handle SSlError:  https://expired.badssl.com/
1.DesiredCapabilities DC = new DesiredCapabilities();
2.DC.setCapabilities(CapabilityType.ACCEPT_INSECURE_CERTS, true);
  DC.setCapabilities(CapabilityType.ACCEPT_SSL_CERTS, true);
3.ChromeOptions cOpt= new ChromeOptions();
  cOpt.merge(DC);
4.WebDriver driver=new ChromeDriver(cOpt);

HandleAuthentication Issue: https://the-internet.herokuapp.com/basic_auth
Just need to add username:password with url.
driver.get("https://"+userName+":"+password+"@the-internet.herokuapp.com/basic_auth");  username='admin'  password='admin'
		

Read & Write from Properties:
1.Create Project as 'readWriteFile'.
2.Create Package under src/test/resources as 'properties'.
3.Create Package under src/test/java as 'readFile'
4.Go to the resource-->roperties folder-->right click-->New-->File 'xyz.roperties'
5.Set data on it.
6.public static void main(String[] args) throws IOException {
		Properties properties = new Properties();
       FileInputStream inutStream = new FileInputStream("D:\\Eclipse_Workspace\\raedWriteFile\\src\\test\\resources\\properties");
       properties.load(inutStream);
       System.out.println(properties.getProperty("browser"));
       System.out.println(properties.getProperty("url"));
       FileOutputStream ouputStream = new FileOutputStream("D:\\Eclipse_Workspace\\raedWriteFile\\src\\test\\resources\\properties");
       properties.setProperty("testData", "56564747");
       properties.store(ouputStream, "This is Comment");
       
	}

We can manage Keys by using KeyDown function from Action class. as well we can use sendkeys() with aplphabet like 'a'/'v' for shortcuts.


https://www.youtube.com/watch?v=1V1w8ccRp_M


